version: '3.8'

services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
  kafka-ui:
    image: 'provectuslabs/kafka-ui:latest'
    ports:
      - '8080:8080'
    environment:
      KAFKA_CLUSTERS_0_NAME: Local
      KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER_CONNECT: zookeeper:2181
  apigateway:
    build: ./APIGateway
    container_name: APIGateway
    ports:
      - "8088:8088"
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092

  authserver:
    build: ./AuthServer
    container_name: AuthServer
    ports:
      - "8086:8086"
    depends_on:
      - kafka
      - postgresql
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres

  logserver:
    build: ./LogServer
    container_name: LogServer
    ports:
      - "8082:8082"
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092

  postgresql:
    image: postgres
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
